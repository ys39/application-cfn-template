AWSTemplateFormatVersion: '2010-09-09'
Description:
  Create EC2 instance, SSH Key Pair
Metadata:
  # Specify input parameter grouping and ordering
  "AWS::CloudFormation::Interface": 
    ParameterGroups: 
      - Label: 
          default: "Prefix"
        Parameters: 
          - Prefix
Parameters:
  Prefix:
    Description: "Prefix for resource name"
    Type: String
    Default: "FirstPj-" # Prefix for resource name
  EC2SSHImageId:
    Description: 'AMI ID for the EC2 SSH instance'
    Type: AWS::EC2::Image::Id
    Default: ami-03dceaabddff8067e
  EC2SSHInstanceType:
    Description: 'Instance type for the EC2 SSH instance'
    Type: String
    Default: t2.nano
  EC2WebImageId:
    Description: 'AMI ID for the EC2 Web instance'
    Type: AWS::EC2::Image::Id
    Default: ami-03dceaabddff8067e
  EC2WebInstanceType:
    Description: 'Instance type for the EC2 Web instance'
    Type: String
    Default: t2.nano
  EC2WebInstance1Hostname:
    Description: 'Hostname for the EC2 Web instance1'
    Type: String
    Default: web1
  EC2WebInstance2Hostname:
    Description: 'Hostname for the EC2 Web instance2'
    Type: String
    Default: web2
Resources:
  # SSH Key Pair
  SSHKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub ${Prefix}SSHKeyPair
      PublicKeyMaterial: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJBkcBihSBocbF7d8INIPXhZStHmG5oNAlqEpyx7NbsS
  # EIP
  EC2SSHEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  # EIP Association
  EC2SSHEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt EC2SSHEIP.AllocationId
      InstanceId: !Ref EC2SSHInstance
  # EC2 SSH instance
  EC2SSHInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 10
            DeleteOnTermination: true
            Encrypted: true
      ImageId: !Sub "${EC2SSHImageId}"
      InstanceType: !Sub "${EC2SSHInstanceType}"
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId: !ImportValue PublicSubnet1
          GroupSet:
            - !ImportValue EC2SSHSecurityGroup
          AssociatePublicIpAddress: true # Enable public IP
          PrivateIpAddress: "10.0.1.10" # Private IP Address
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}EC2SSHInstance"
  # EC2 Web instance1
  EC2WebInstance1:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 10
            DeleteOnTermination: true
            Encrypted: true
      ImageId: !Sub "${EC2WebImageId}"
      InstanceType: !Sub "${EC2WebInstanceType}"
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId: !ImportValue PrivateSubnet1
          GroupSet:
            - !ImportValue EC2WebSecurityGroup
          AssociatePublicIpAddress: false # Disable public IP
          PrivateIpAddress: "10.0.3.10" # Private IP Address
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}EC2WebInstance1"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Install packages
          yum clean all
          yum -y install epel-release
          yum -y install http://ftp.riken.jp/Linux/remi/enterprise/remi-release-9.rpm
          yum -y update
          yum -y install \
          net-tools \
          bind-utils \
          lsof \
          vim \
          wget \
          git \
          dstat \
          openssl \
          nginx
          # Disable SELinux and Firewalld
          sed -i -e "s/^SELINUX=enforcing$/SELINUX=permissive/g" /etc/selinux/config
          systemctl stop firewalld
          systemctl disable firewalld
          # Disable IPv6
          echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.d/disable_ipv6.conf
          echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.d/disable_ipv6.conf
          sysctl -p/etc/sysctl.d/disable_ipv6.conf
          # Set timezone
          dnf -y install glibc-langpack-ja
          localectl set-locale LANG=ja_JP.utf8
          timedatectl set-timezone Asia/Tokyo
          # Set NTP
          sed -ie "s/server 0.centos.pool.ntp.org iburst/server ntp1.jst.mfeed.ad.jp iburst/g" /etc/chrony.conf
          sed -ie "s/server 1.centos.pool.ntp.org iburst/server ntp2.jst.mfeed.ad.jp iburst/g" /etc/chrony.conf
          sed -ie "s/server 2.centos.pool.ntp.org iburst/server ntp3.jst.mfeed.ad.jp iburst/g" /etc/chrony.conf
          sed -ie "s/server 3.centos.pool.ntp.org iburst/server ntp.nict.jp iburst/g" /etc/chrony.conf
          systemctl restart chronyd
          chronyc makestep
          # hostname
          hostnamectl set-hostname --static ${EC2WebInstance1Hostname}
  # EC2 Web instance2
  EC2WebInstance2:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 10
            DeleteOnTermination: true
            Encrypted: true
      ImageId: !Sub "${EC2WebImageId}"
      InstanceType: !Sub "${EC2WebInstanceType}"
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId: !ImportValue PrivateSubnet2
          GroupSet:
            - !ImportValue EC2WebSecurityGroup
          AssociatePublicIpAddress: false # Disable public IP
          PrivateIpAddress: "10.0.4.10" # Private IP Address
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}EC2WebInstance2"
Outputs:
  EC2WebInstance1:
    Description: "EC2 Web Instance1"
    Value: !Ref EC2WebInstance1
    Export:
      Name: EC2WebInstance1
  EC2WebInstance2:
    Description: "EC2 Web Instance2"
    Value: !Ref EC2WebInstance2
    Export:
      Name: EC2WebInstance2